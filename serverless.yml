service: starwars-api

frameworkVersion: '3'


plugins:
 - serverless-plugin-typescript
 - serverless-offline
 - serverless-plugin-log-retention
custom:
  logRetentionInDays: 7  
  stage: ${opt:stage, self:provider.stage}
  dotenv:
    enabled: true
    path: .env
useDotenv: true
provider:
  name: aws
  lambdaHashingVersion: '20201221'
  runtime: nodejs18.x
  region: ${opt:region,'us-west-1'} 
  stage: dev
  memorySize: 250
  environment:
    DYNAMO_DB_TABLE: ${env:DYNAMO_DB_TABLE}
    API_URL_BASE: ${env:API_URL_BASE}
  iam:
    role:
      statements:
        - Effect: Allow
          Action: 'dynamodb:*'
          Resource: '*'
functions:
  api:
    handler: src/serverlesDeploy/http/lambda.handler
    timeout: 30
    events:
      - http:
          path: /starwars/films/{id}
          method: GET
          cors:
            origin: '*'
      - http:
          path: /starwars/films
          method: GET
          cors:
            origin: '*'   
      - http:
          path: /starwars/films
          method: POST
          cors:
            origin: '*'   
      - http:
          path: docs
          method: GET
          cors:
            origin: '*'                 